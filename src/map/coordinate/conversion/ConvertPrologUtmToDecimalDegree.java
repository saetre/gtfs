/**
 * Convert BussTUCs UTM coordinates to decimal degree latitude/longitude coordinates
 */
package map.coordinate.conversion;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.ibm.util.CoordinateConversion;

/**
 * @author Rune Sætre
 * @since 2012.07.26
 */
@SuppressWarnings("unused")
public class ConvertPrologUtmToDecimalDegree {

	private static final String INFILE = "C:/eclipse/workspace_prolog/busstuc/db/statcoord.pl"; // "/tables/r1604_120625/";
	private static final String INENCODING = "utf-8";
	private static final String OUTFILE = "C:/eclipse/workspace_prolog/busstuc/db/statcoord2.pl";
	private static final String OUTENCODING = "utf-8";

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		CoordinateConversion cc = new CoordinateConversion();

		System.err.println( " In: "+INFILE+" ("+INENCODING+")\nOut: "+OUTFILE+" ("+INENCODING+")" );

		BufferedReader br = null;
		BufferedWriter out = null;
		try {
			br = new BufferedReader( new InputStreamReader( new FileInputStream ( INFILE ), INENCODING ) );
			out = new BufferedWriter( new OutputStreamWriter( new FileOutputStream( OUTFILE ), OUTENCODING ) );
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}

		String tekst = null;
		Pattern encodingPattern = Pattern.compile("/\\* -\\*- Mode:Prolog; coding:([^;]*); -\\*- \\*/", Pattern.CASE_INSENSITIVE); // Group(1) is utf-8 or iso-8859-1
		//statcoord(stat_id,stat_name, latitude, longitude ). // Group(1) is "up to 2nd ," and 2 is "latitude" and 3 is "longitude" and 4 is ")."
		Pattern statcoordPattern = Pattern.compile("(statcoord\\([0-9]*,'[a-zæøåA-ZÆØÅè0-9,.`/() -]*',)([0-9.]*|nil|[- ]*),([0-9.]*|nil|[- ]*)(\\).*)");

		try {
			if (br != null){
				br.mark(1000);
				tekst = br.readLine();
				Matcher encodingMatcher = encodingPattern.matcher( tekst ); 
				if ( encodingMatcher.find() ){
					System.out.println("Encoding is "+encodingMatcher.group(1) );
					if ( encodingMatcher.group(1).matches(INENCODING ) ){
						out.write( tekst+"\n" );
					}else{
						System.err.println("UNEXPECTED ENCODING is "+encodingMatcher.group(1) );
						System.exit(0);
					}
				}else{
					out.write("/* -*- Mode:Prolog; coding:utf-8; -*- */\n");
					br.reset();
				}//If encoding specified, else assume utf-8
				
				out.write("%% AUTOGENERATED BY ConvertPrologUtmToDecimalDegree.java\n" );
				while ( (tekst = br.readLine()) != null){
					//System.out.println("Skip: "+tekst);
					//statcoord(16011011,'Prinsen Kinosenter',569554.316,7033835.013).
					Matcher matcher = statcoordPattern.matcher( tekst );
					if ( matcher.find() ){
						// format: 34 G 683473 4942631
						try{
							double lat = Double.parseDouble( matcher.group(2) );
							double lng = Double.parseDouble( matcher.group(3) );
							String utm = "32 W "+lat+" "+lng;
							double[] latLng = cc.utm2LatLon(utm);
							if ( lat != 0 && lng != 0 ){
								//System.out.println( matcher.group(1)+" "+latLng[0]+", "+latLng[1]+matcher.group(4) );
								out.write( matcher.group(1)+" "+latLng[0]+", "+latLng[1]+matcher.group(4)+"\n" );
							}else{
								//System.out.println( matcher.group(1)+" 0, 0"+matcher.group(4) );
								out.write( matcher.group(1)+" 0, 0"+matcher.group(4)+"\n" );
							}
						}catch (NumberFormatException e){
							//System.out.println( matcher.group(1)+" 0, 0"+matcher.group(4) );
							out.write( matcher.group(1)+" 0, 0"+matcher.group(4)+"\n" );
						}
					}else{
						out.write( tekst+"\n" );
						System.out.println("Skip: "+tekst);
					}//if statcoord to transform, else dump the line as it is to the outputfile
				}//while more line
				br.close();
			}
			if (out != null) out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}//class CoordinateConversion:main
